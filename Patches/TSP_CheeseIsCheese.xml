<?xml version="1.0" encoding="utf-8" ?><Patch>	<!-- This code was provided by the user 'I Exist', and then butchered and simplified on Dub's Discord chat room by Kyoutaigo -->		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<!-- <li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li> -->						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<!-- <li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li> -->						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<!-- <li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li> -->						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>			</operations>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="ST_ProcessedCheese"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<!-- <success>Always</success> -->			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="ST_ProcessedCheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="ST_ProcessedCheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="ST_ProcessedCheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>			</operations>		</match>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="O_Cheese"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<!-- <success>Always</success> -->			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="O_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="O_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="O_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->					</value>				</li>			</operations>		</match>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<!-- <success>Always</success> -->			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="RIM_cheese_KIK"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->						<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="RIM_cheese_KIK"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->						<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="RIM_cheese_KIK"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>						<li MayRequire="onekimchiman.ingredienttime">O_Cheese</li>						<!-- <li MayRequire="sarg.rimbees,vanillaexpanded.vcooke">VCE_BeeCheese</li> -->						<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>					</value>				</li>			</operations>		</match>	</Operation>		<!-- Aelanna's Model No-Match Detector and Insertion Code -->	<!-- Special thanks to Aelanna for straight-up saving me scores of headaches! -->	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="MAG_ArchotechCheese"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="MAG_ArchotechCheese"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>	<Operation Class="PatchOperationConditional" MayRequire="vanillaexpanded.vcooke">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="MAG_ArchotechCheese"]/thingCategories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="MAG_ArchotechCheese"]/thingCategories</xpath>			<value>				<thingCategories Inherit="False">					<li>AnimalProductRaw</li>					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional" MayRequire="TSP.Isengriff.Storytime">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="ST_Make_Cheese"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites>					<li MayRequire="vanillaexpanded.vcooke">VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_Cheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_WeirdCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_WeirdCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_BlueCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_BlueCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_GowCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_GowCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_GowCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_GowCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_NightCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_NightCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_BeeCheese"]/tradeability</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_BeeCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="VCE_InsectCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="VCE_InsectCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="DM_DragonCheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="DM_DragonCheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="MG_NaiDouFu"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="MG_NaiDouFu"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="MG_NaiDouFu"]</xpath>		<!-- If it does, add this. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/ThingDef[defName="MG_NaiDouFu"]/thingCategories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="O_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="O_Cheese"]/tradeability</xpath>			<value>				<tradeability>All</tradeability>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="O_Cheese"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="O_Cheese"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional" MayRequire="vanillaexpanded.vcooke">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="O_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace" MayRequire="vanillaexpanded.vcooke">			<success>Always</success>			<xpath>Defs/ThingDef[defName="O_Cheese"]/thingCategories</xpath>			<value MayRequire="vanillaexpanded.vcooke">				<thingCategories Inherit="False">					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="MakeCheese"]</xpath>			<success>Always</success>			<value>				<researchPrerequisites></researchPrerequisites>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li>VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="MakeCheese"]</xpath>			<success>Always</success>			<value>				<researchPrerequisites></researchPrerequisites>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li>VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="MakeCheeseBulk"]/researchPrerequisites</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="MakeCheeseBulk"]</xpath>			<success>Always</success>			<value>				<researchPrerequisites></researchPrerequisites>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="MakeCheeseBulk"]/researchPrerequisites</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="MakeCheeseBulk"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li>VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="RFE_Cheese"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="RFE_Cheese"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>	<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="RFE_Cheese"]/thingCategories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="RFE_Cheese"]/thingCategories</xpath>			<value>				<thingCategories Inherit="False">					<li>AnimalProductRaw</li>					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="AC_MaruCheese"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="AC_MaruCheese"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>	<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="AC_MaruCheese"]/thingCategories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="AC_MaruCheese"]/thingCategories</xpath>			<value>				<thingCategories Inherit="False">					<li>FoodMeals</li>					<li>AnimalProductRaw</li>					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[@Name="DankPyon_CheeseBase"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites>					<li MayRequire="vanillaexpanded.vcooke">VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Cheese"]/parent</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingCategoryDef[defName="DankPyon_Cheese"]/parent</xpath>			<value>				<parent>AnimalProductRaw</parent>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingCategoryDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingCategoryDef[defName="DankPyon_Cheese"]/parent</xpath>			<value>				<parent>VCE_Cheese</parent>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[@Name="DankPyon_CheeseBase"]/thingCategories</xpath>			<value>				<thingCategories Inherit="False">					<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>					<li>FoodMeals</li>					<li>AnimalProductRaw</li>					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingCategoryDef[defName="VCE_Cheese"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<!-- <success>Always</success> -->			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/categories/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/categories/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/categories/li[text()="VCE_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>					</value>				</li>			</operations>		</match>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Cheese"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->		<match Class="PatchOperationSequence">			<!-- <success>Always</success> -->			<operations>				<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/ingredients/li/filter/categories/li[text()="DankPyon_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/fixedIngredientFilter/categories/li[text()="DankPyon_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>					</value>				</li>								<li Class="PatchOperationInsert">					<xpath>Defs/RecipeDef/defaultIngredientFilter/categories/li[text()="DankPyon_Cheese"]</xpath>					<success>Always</success>					<value>						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>					</value>				</li>			</operations>		</match>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="DankPyon_MealCheeseSoup"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="ST_Make_Cheese"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites>					<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="DankPyon_MealCheeseSoup"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="MakeCheeseBulk"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->	<xpath>Defs/ThingDef[defName="DankPyon_MealCheeseSoup"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="MakeCheese"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]/thingCategories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]</xpath>			<success>Always</success>			<value>				<thingCategories></thingCategories>			</value>		</nomatch>	</Operation>	<Operation Class="PatchOperationConditional" MayRequire="vanillaexpanded.vcooke">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]/thingCategories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]/thingCategories</xpath>			<value>				<thingCategories>					<li>AnimalProductRaw</li>					<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				</thingCategories>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="Make_RIM_cheese_KIK"]/researchPrerequisites</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/ThingDef[defName="RIM_cheese_KIK"]</xpath>			<success>Always</success>			<value>				<researchPrerequisites>					<li MayRequire="vanillaexpanded.vcooke">VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ResearchProjectDef[defName="VCE_CheeseMaking"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="Make_RIM_cheese_KIK"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li MayRequire="vanillaexpanded.vcooke">VCE_CheeseMaking</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="DankPyon_MealCheeseSoup"]</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="Make_RIM_cheese_KIK"]/researchPrerequisites</xpath>			<value>				<researchPrerequisites Inherit="False">					<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>				</researchPrerequisites>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>	<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter/thingDefs</xpath>			<value>				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/ingredients/li[4]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_Hambuggi"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/ingredients/li[4]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="RFE_HambuggiBulk"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/ingredients/li[1]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/ingredients/li[1]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookCheeseburger_KIK"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/ingredients/li[1]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/ingredients/li[1]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookCheesePizza_KIK"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li[1]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li[1]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="Cookcreamstew_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients</xpath>		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients</xpath>			<value>				<li>					<filter>						<categories>							<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>						</categories>						<thingDefs>							<li>RIM_cheese_KIK</li>							<li MayRequire="TSP.Isengriff.Storytime">ST_Processed_Cheese</li>						</thingDefs>					</filter>					<count>0.25</count>				</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients</xpath>		<match Class="PatchOperationReplace">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/ingredients/li[2]</xpath>			<value>				<li Inherit="False">					<filter>						<categories>							<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>						</categories>						<thingDefs>							<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>							<li MayRequire="TSP.Isengriff.Storytime">ST_Processed_Cheese</li>						</thingDefs>					</filter>					<count>0.25</count>				</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter/thingDefs</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookDivineMilkVK_KIK"]/fixedIngredientFilter/thingDefs</xpath>			<value>				<li MayRequire="miran.milk.cheese">RIM_cheese_KIK</li>				<li MayRequire="TSP.Isengriff.Storytime">ST_Processed_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/ingredients/li/filter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/ingredients/li/filter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->	<Operation Class="PatchOperationConditional">		<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/fixedIngredientFilter/categories</xpath>		<nomatch Class="PatchOperationAdd">			<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/fixedIngredientFilter</xpath>			<success>Always</success>			<value>				<categories></categories>			</value>		</nomatch>	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/ingredients/li[3]/filter/categories</xpath>		<!-- If it does, do this replacement. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/ingredients/li[3]/filter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>			<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/fixedIngredientFilter/categories</xpath>		<!-- If it does, add this. -->		<match Class="PatchOperationAdd">			<success>Always</success>			<xpath>Defs/RecipeDef[defName="CookNoblemilk_KIK"]/fixedIngredientFilter/categories</xpath>			<value>				<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>			</value>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation>		<Operation Class="PatchOperationConditional">	<!-- Does this exist? -->		<xpath>Defs/ThingDef[defName="DankPyon_RoxHorn"]</xpath>		<!-- If it does, LET'S FASTING GOOOOOOOO!! -->		<match Class="PatchOperationSequence">			<operations>				<!-- CHEESE! -->				<li Class="PatchOperationInsert">					<success>Always</success>					<xpath>Defs/ThingDef/recipeMaker/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>					</value>				</li>								<li Class="PatchOperationInsert">					<success>Always</success>					<xpath>Defs/RecipeDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>					</value>				</li>								<li Class="PatchOperationInsert">					<success>Always</success>					<xpath>Defs/ThingDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>					</value>				</li>								<li Class="PatchOperationInsert">					<success>Always</success>					<xpath>Defs/TerrainDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>					<value>						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>					</value>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/ResearchProjectDef/prerequisites/li[text()="VCE_CheeseMaking"]</xpath>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/ThingDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/ThingDef/recipeMaker/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/RecipeDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/TerrainDef/researchPrerequisites/li[text()="VCE_CheeseMaking"]</xpath>				</li>								<li Class="PatchOperationReplace">					<success>Always</success>					<xpath>Defs/ThingDef[researchPrerequisite="VCE_CheeseMaking"]/researchPrerequisite</xpath>					<value>						<researchPrerequisites>							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>						</researchPrerequisites>					</value>				</li>								<li Class="PatchOperationReplace">					<success>Always</success>					<xpath>Defs/ThingDef/recipeMaker[researchPrerequisite="VCE_CheeseMaking"]/researchPrerequisite</xpath>					<value>						<researchPrerequisites>							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>						</researchPrerequisites>					</value>				</li>								<li Class="PatchOperationReplace">					<success>Always</success>					<xpath>Defs/TerrainDef[researchPrerequisite="VCE_CheeseMaking"]/researchPrerequisite</xpath>					<value>						<researchPrerequisites>							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Presser</li>						</researchPrerequisites>					</value>				</li>								<li Class="PatchOperationRemove">					<success>Always</success>					<xpath>Defs/ResearchProjectDef[defName="VCE_CheeseMaking"]</xpath>				</li>			</operations>		</match>		<!-- If the first XPATH does not exist, the original code stands. -->	</Operation></Patch>