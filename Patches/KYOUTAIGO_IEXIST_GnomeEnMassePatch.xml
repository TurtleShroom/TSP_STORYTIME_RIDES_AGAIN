<?xml version="1.0" encoding="utf-8" ?>

<!-- This code was provided by the user 'I Exist', and then butchered and simplified on Dub's Discord chat room by Kyoutaigo -->

<Patch>
	<!-- Aelanna's Model No-Match Detector and Insertion Code -->
	<!-- Special thanks to Aelanna for straight-up saving me scores of headaches! -->
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<disallowedThingDefs></disallowedThingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<!-- If it DOES NOT, add this. -->
		<nomatch Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="AC_GrindFlours"]/fixedIngredientFilter/disallowedThingDefs</xpath>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
				<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
				<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
				<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
				<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
				<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
				<li MayRequire="mlie.vanillalikewheat">Flour</li>
				<li MayRequire="sarg.alphacrafts">AC_Flour</li>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</nomatch>
	<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<disallowedThingDefs></disallowedThingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<!-- If it DOES NOT, add this. -->
		<nomatch Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="AC_GrindIntoChips"]/fixedIngredientFilter/disallowedThingDefs</xpath>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
				<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
				<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
				<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
				<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
				<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
				<li MayRequire="mlie.vanillalikewheat">Flour</li>
				<li MayRequire="sarg.alphacrafts">AC_Flour</li>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</nomatch>
	<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<disallowedThingDefs></disallowedThingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]/fixedIngredientFilter/disallowedThingDefs</xpath>
		<!-- If it DOES NOT, add this. -->
		<nomatch Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="AC_PepareGravy"]/fixedIngredientFilter/disallowedThingDefs</xpath>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
				<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
				<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
				<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
				<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
				<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
				<li MayRequire="mlie.vanillalikewheat">Flour</li>
				<li MayRequire="sarg.alphacrafts">AC_Flour</li>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</nomatch>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="VCE_Flour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_RawSugar"]</xpath>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_GnomeSugar</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Pepsi</li>
						<li MayRequire="sarg.alphabiomes">AB_RawSugarFamewort</li>
						<li MayRequire="neronix17.halloween">O21_Halloween_CandyCorn</li>
						<!-- <li MayRequire="zal.witchinghour">Candycorn</li> -->
						<li MayRequire="zal.witchinghour">Smirties</li>
						<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
						<li MayRequire="sarg.alphacrafts">AC_CornSyrup</li>
						<li MayRequire="sarg.alphacrafts,vanillaexpanded.vcooke">AC_Molasses</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Sugar</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawSugar"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_GnomeSugar</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Pepsi</li>
						<li MayRequire="sarg.alphabiomes">AB_RawSugarFamewort</li>
						<li MayRequire="neronix17.halloween">O21_Halloween_CandyCorn</li>
						<!-- <li MayRequire="zal.witchinghour">Candycorn</li> -->
						<li MayRequire="zal.witchinghour">Smirties</li>
						<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
						<li MayRequire="sarg.alphacrafts">AC_CornSyrup</li>
						<li MayRequire="sarg.alphacrafts,vanillaexpanded.vcooke">AC_Molasses</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Sugar</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawSugar"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_GnomeSugar</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Pepsi</li>
						<li MayRequire="sarg.alphabiomes">AB_RawSugarFamewort</li>
						<li MayRequire="neronix17.halloween">O21_Halloween_CandyCorn</li>
						<!-- <li MayRequire="zal.witchinghour">Candycorn</li> -->
						<li MayRequire="zal.witchinghour">Smirties</li>
						<li MayRequire="sarg.alphacrafts">AC_CornSyrup</li>
						<li MayRequire="sarg.alphacrafts,vanillaexpanded.vcooke">AC_Molasses</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Sugar</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="O_GrainFlour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="O_GrainFlour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="O_GrainFlour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="O_GrainFlour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationReplace" MayRequire="vanillaexpanded.vcooke">
					<xpath MayRequire="vanillaexpanded.vcooke">Defs/ThingDef[defName="O_GrainFlour"]/thingCategories</xpath>
					<success>Always</success>
					<value MayRequire="vanillaexpanded.vcooke">
						<thingCategories>
							<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
							<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
							<li>PlantMatter</li>
							<!-- <li>PlantFoodRaw</li> -->
						</thingCategories>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/disallowedThingDefs</xpath>
					<success>Always</success>
					<value>
						<!-- <li>O_GrainFlour</li> -->
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
		
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="WorkedRawRice"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="WorkedRawRice"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="WorkedRawRice"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="WorkedRawRice"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="Flour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationReplace">
					<xpath>Defs/ThingDef[defName="Flour"]/thingCategories</xpath>
					<success>Always</success>
					<value>
						<thingCategories>
							<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
							<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
							<li>PlantMatter</li>
						</thingCategories>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="DankPyon_Flour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="sarg.alphacrafts">AC_Flour</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">GnomeFlour</li>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
						<li MayRequire="onekimchiman.ingredienttime">O_GrainFlour</li>
						<li MayRequire="zal.braziliancrops">KIT_ManiocFlour</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Flour</li>
						<li MayRequire="mlie.vanillalikewheat">Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationReplace">
					<xpath>Defs/ThingDef[defName="DankPyon_Flour"]/thingCategories</xpath>
					<success>Always</success>
					<value>
						<thingCategories>
							<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
							<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
							<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
							<li>PlantMatter</li>
						</thingCategories>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/categories/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/categories/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/categories/li[text()="DankPyon_Flour"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_RawFlax"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawFlax"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawFlax"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawFlax"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
						<li MayRequire="Dajian.ChiTeaditional.Expanded">WorkedRawRice</li>
						<li MayRequire="lordoftherims.elves">LotRE_Lembasflour</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingCategoryDef[defName="VLW_CategoryProcessed"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/categories/li[text()="VLW_CategoryProcessed"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/categories/li[text()="VLW_CategoryProcessed"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/categories/li[text()="VLW_CategoryProcessed"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingCategoryDef[defName="Cereal"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/categories/li[text()="Cereal"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/categories/li[text()="Cereal"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/categories/li[text()="Cereal"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="WorkedRawRice"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="WorkedRawRice"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="WorkedRawRice"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="WorkedRawRice"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="WorkedRawRice"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="LotRE_Lembasflour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="LotRE_Lembasflour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="LotRE_Lembasflour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="LotRE_Lembasflour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="LotRE_Lembasflour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="O_GrainFlour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="O_GrainFlour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="O_GrainFlour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="O_GrainFlour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="O_GrainFlour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="KIT_ManiocFlour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="KIT_ManiocFlour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="KIT_ManiocFlour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="KIT_ManiocFlour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="KIT_ManiocFlour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="VCE_Flour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="VCE_Flour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="VCE_Flour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="VCE_Flour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="VCE_Flour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="AC_Flour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="AC_Flour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="AC_Flour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="AC_Flour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="AC_Flour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="Flour"]/thingCategories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="Flour"]</xpath>
			<success>Always</success>
			<value>
				<thingCategories Inherit="False"></thingCategories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="Flour"]/thingCategories/li[text()="DankPyon_Flour"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="Flour"]/thingCategories</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="Flour"]/thingCategories</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Flour</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/fixedIngredientFilter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>

	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple"]</xpath>
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeSimple" or defName="VCE_CookBakeSimpleBulk"]/categories</xpath>
			<success>Always</success>
			<value>
				<li>DankPyon_Flour</li>
			</value>
		</match>
	</Operation>

	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeFine" or defName="VCE_CookBakeFineBulk" or defName="VCE_CookBakeLavish" or defName="VCE_CookBakeLavishBulk"]/ingredients/li[3]/filter/categories</xpath>
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeFine" or defName="VCE_CookBakeFineBulk" or defName="VCE_CookBakeLavish" or defName="VCE_CookBakeLavishBulk"]/ingredients/li[3]/filter/categories</xpath>
			<success>Always</success>
			<value>
				<li>DankPyon_Flour</li>
			</value>
		</match>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeFine" or defName="VCE_CookBakeFineBulk" or defName="VCE_CookBakeLavish" or defName="VCE_CookBakeLavishBulk"]/ingredients/li[3]/filter</xpath>
			<success>Always</success>
			<value>
				<categories>
					<li>DankPyon_Flour</li>
				</categories>
			</value>
		</nomatch>
	</Operation>

	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="VCE_CookBakeGourmet" or defName="VCE_CookBakeGourmetBulk"]/ingredients/li[4]/filter/categories</xpath>
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeGourmet" or defName="VCE_CookBakeGourmetBulk"]/ingredients/li[4]/filter/categories</xpath>
			<success>Always</success>
			<value>
				<li>DankPyon_Flour</li>
			</value>
		</match>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="VCE_CookBakeGourmet" or defName="VCE_CookBakeGourmetBulk"]/ingredients/li[4]/filter</xpath>
			<success>Always</success>
			<value>
				<categories>
					<li>DankPyon_Flour</li>
				</categories>
			</value>
		</nomatch>
	</Operation>
</Patch>