<?xml version="1.0" encoding="utf-8" ?>

<Patch>
	<!-- Aelanna's Model No-Match Detector and Insertion Code -->
	<!-- Special thanks to Aelanna for straight-up saving me scores of headaches! -->
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>

	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_NaturalWall_Clay"]/building</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_NaturalWall_Clay"]/building</xpath>
			<success>Always</success>
			<value>
				<building>
					<isResourceRock>true</isResourceRock>
					<isNaturalRock>false</isNaturalRock>
					<mineableThing>DankPyon_ChunkClay</mineableThing>
					<mineableYield>2</mineableYield>
					<mineableDropChance>1</mineableDropChance>
					<smoothedThing>DankPyon_SmoothedClay</smoothedThing>
					<mineableScatterCommonality>2</mineableScatterCommonality>
					<mineableScatterLumpSizeRange>36~64</mineableScatterLumpSizeRange>
					<artificialForMeditationPurposes>false</artificialForMeditationPurposes>
					<claimable>false</claimable>
					<paintable>true</paintable>
					<veinMineable>true</veinMineable>
				</building>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_SmoothedClay"]/building</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_SmoothedClay"]/building</xpath>
			<success>Always</success>
			<value>
				<building Inherit="False">
					<isResourceRock>false</isResourceRock>
					<isNaturalRock>false</isNaturalRock>
					<mineableScatterCommonality>0</mineableScatterCommonality>
					<mineableScatterLumpSizeRange>0~0</mineableScatterLumpSizeRange>
					<mineableThing>DankPyon_ChunkClay</mineableThing>
					<mineableYield>2</mineableYield>
					<mineableDropChance>1</mineableDropChance>
					<smoothedThing />
					<artificialForMeditationPurposes>false</artificialForMeditationPurposes>
					<claimable>false</claimable>
					<paintable>true</paintable>
					<veinMineable>true</veinMineable>
				</building>
			</value>
		</match>
	</Operation>
  
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Tree_Mulberry"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef/plant/sowResearchPrerequisites/li[text()="DankPyon_BasicAgriculture"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Tree_Mulberry"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef/plant/sowResearchPrerequisites/li[text()="DankPyon_IntermediateAgriculture"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Tree_Mulberry"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef/plant/sowResearchPrerequisites/li[text()="DankPyon_AdvancedAgriculture"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li[2]/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/fixedIngredientFilter/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoup"]/ingredients/li[3]/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
				<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
			</value>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBoneSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookMushroomSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBreadSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter/categories</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookPumpkinSoup"]/ingredients/li/filter</xpath>
			<success>Always</success>
			<value>
				<categories></categories>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]/ingredients</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]/ingredients</xpath>
			<success>Always</success>
			<value>
				<ingredients Inherit="False">
					<li>
						<filter>
							<customSummary>cheese</customSummary>
							<categories>
								<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
							</categories>
							<thingDefs>
								<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>
							</thingDefs>
							<disallowedCategories>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Milk</li>
							</disallowedCategories>
							<disallowedThingDefs>
								<li>Milk</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
							</disallowedThingDefs>
						</filter>
						<count>2.75</count>
					</li>
					<li>
						<filter>
							<customSummary>ale, beer, musts, honey</customSummary>
							<categories>
								<li MayRequire="vanillaexpanded.vbrewe">VBE_Musts</li>
								<li MayRequire="zal.patchhoney">Honey</li>
								<li MayRequire="sarg.rimbees">RB_Honeys</li>
							</categories>
							<thingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Ale</li>
								<li>Beer</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
							</thingDefs>
							<disallowedCategories>
								<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
							</disallowedCategories>
							<disallowedThingDefs>
								<li>Milk</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="zal.braziliancrops">KIT_Beans</li>
								<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
							</disallowedThingDefs>
						</filter>
						<count>1</count>
					</li>
					<li>
						<filter>
							<customSummary>garlic, vegetables</customSummary>
							<categories>
								<li>PlantFoodRaw</li>
							</categories>
							<thingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawGarlic</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Cabbage</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="zal.braziliancrops">KIT_Beans</li>
								<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
							</thingDefs>
							<disallowedCategories>
								<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
							</disallowedCategories>
							<disallowedThingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
							</disallowedThingDefs>
						</filter>
						<count>4</count>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]/fixedIngredientFilter</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookCheeseSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter Inherit="False">
					<categories>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
						<li MayRequire="vanillaexpanded.vbrewe">VBE_Musts</li>
						<li MayRequire="zal.patchhoney">Honey</li>
						<li MayRequire="sarg.rimbees">RB_Honeys</li>
						<li>PlantFoodRaw</li>
					</categories>
					<thingDefs>
						<li MayRequire="TSP.Isengriff.Storytime">ST_ProcessedCheese</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Cabbage</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Ale</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawGarlic</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
						<li MayRequire="zal.braziliancrops">KIT_Beans</li>
						<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
						<li>Beer</li>
					</thingDefs>
				</fixedIngredientFilter>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]/ingredients</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]/ingredients</xpath>
			<success>Always</success>
			<value>
				<ingredients Inherit="False">
					<li>
						<filter>
							<customSummary>lentils, beans</customSummary>
							<thingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="zal.braziliancrops">KIT_Beans</li>
								<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
								<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
							</thingDefs>
						</filter>
						<count>3</count>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]/fixedIngredientFilter</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookLentilSoup"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter Inherit="False">
					<thingDefs>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
						<li MayRequire="zal.braziliancrops">KIT_Beans</li>
						<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
						<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
					</thingDefs>
				</fixedIngredientFilter>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]/ingredients</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]/ingredients</xpath>
			<success>Always</success>
			<value>
				<ingredients Inherit="False">
					<li>
						<filter>
							<customSummary>lentils, beans</customSummary>
							<thingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="zal.braziliancrops">KIT_Beans</li>
								<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
								<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
							</thingDefs>
						</filter>
						<count>1.9</count>
					</li>
					<li>
						<filter>
							<customSummary>onions</customSummary>
							<thingDefs>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
							</thingDefs>
							<disallowedCategories>
								<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Milk</li>
								<li MayRequire="vanillaexpanded.vbrewe">VBE_Musts</li>
							</disallowedCategories>
							<disallowedThingDefs>
								<li>Milk</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
							</disallowedThingDefs>
						</filter>
						<count>0.75</count>
					</li>
					<li>
						<filter>
							<customSummary>animal products</customSummary>
							<categories>
								<li>AnimalProductRaw</li>
							</categories>
							<thingDefs></thingDefs>
							<disallowedCategories>
								<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Milk</li>
								<li MayRequire="vanillaexpanded.vbrewe">VBE_Musts</li>
								<li>PlantFoodRaw</li>
							</disallowedCategories>
							<disallowedThingDefs>
								<li>Milk</li>
								<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
								<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
							</disallowedThingDefs>
						</filter>
						<count>1</count>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]/fixedIngredientFilter</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="MO_CookBeanOnion"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter Inherit="False">
					<categories>
						<li>AnimalProductRaw</li>
					</categories>
					<thingDefs>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawLentils</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Bean</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawOnions</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawOnion</li>
						<li MayRequire="zal.braziliancrops">KIT_Beans</li>
						<li MayRequire="vvenchov.vvnewharvestgardencrops">VV_BlackBeans</li>
						<li MayRequire="mlie.tropickapprainforestmod">CK_RawJitterBerries</li>
					</thingDefs>
					<disallowedCategories>
						<li MayRequire="vanillaexpanded.vcooke">VCE_Cheese</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Cheese</li>
						<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Milk</li>
						<li MayRequire="vanillaexpanded.vbrewe">VBE_Musts</li>
					</disallowedCategories>
					<disallowedThingDefs>
						<li>Milk</li>
					</disallowedThingDefs>
				</fixedIngredientFilter>
			</value>
		</match>
		<!-- If the first XPATH does not eixst, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="MO_UncookedCheeseSoup"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCheeseSoupBulk"]/products</xpath>
			<success>Always</success>
			<value>
				<products>
					<MO_UncookedCheeseSoup>1</MO_UncookedCheeseSoup>
				</products>
			</value>
		</match>
	</Operation>
		
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="MO_UncookedBoneSoup"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealBoneSoupBulk"]/products</xpath>
			<success>Always</success>
			<value>
				<products>
					<MO_UncookedBoneSoup>1</MO_UncookedBoneSoup>
				</products>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="MO_UncookedLentilSoup"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealWinterLentilSoupBulk"]/products</xpath>
			<success>Always</success>
			<value>
				<products>
					<MO_UncookedLentilSoup>1</MO_UncookedLentilSoup>
				</products>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="MO_UncookedMushroomSoup"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="DankPyon_CookMealMushroomSoupBulk"]/products</xpath>
			<success>Always</success>
			<value>
				<products>
					<MO_UncookedMushroomSoup>1</MO_UncookedMushroomSoup>
				</products>
			</value>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="DankPyon_RusticHearth"]/building</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_RusticHearth"]</xpath>
			<success>Always</success>
			<value>
				<building></building>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_RusticHearth"]/building/buildingTags</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_RusticHearth"]/building/buildingTags</xpath>
			<success>Always</success>
			<value>
				<buildingTags Inherit="False"></buildingTags>
			</value>
		</match>
		<!-- If it DOES NOT, add this instead. -->
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_RusticHearth"]/building</xpath>
			<success>Always</success>
			<value>
				<buildingTags Inherit="False"></buildingTags>
			</value>
		</nomatch>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/FactionDef[@Name="DankPyon_NobleHouseFactionBase"]/structureMemeWeights</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/FactionDef[@Name="DankPyon_NobleHouseFactionBase"]/structureMemeWeights</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Citrine"]</xpath>
		<!-- If it does, insert this in the same bracket. -->
		<match Class="PatchOperationInsert">
			<xpath>Defs/ThingDef/stuffProps/categories/li[text()="DankPyon_Gems"]</xpath>
			<success>Always</success>
			<value>
				<li>Stony</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Citrine"]</xpath>
		<!-- If it does, insert this in the same bracket. -->
		<match Class="PatchOperationInsert">
			<xpath>Defs/ThingDef/stuffProps/categories/li[text()="DankPyon_Gems"]</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="sirmashedpotato.ashlands">Mashed_Ashlands_Crystalline</li>
				<li MayRequire="kikohi.jewelry">Gemstones</li>
				<li>Stony</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="Mashed_Ashlands_VolcanicEbony"]</xpath>
		<!-- If it does, insert this in the same bracket. -->
		<match Class="PatchOperationInsert">
			<xpath>Defs/ThingDef/stuffProps/categories/li[text()="Mashed_Ashlands_Crystalline"]</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_Gems</li>
				<li MayRequire="kikohi.jewelry">Gemstones</li>
				<li>Stony</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_SackApple"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_SackApple"]/building/fixedStorageSettings/filter/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="vanillaexpanded.vplantse">VCE_RawApple</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_SackApple"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_SackApple"]/building/defaultStorageSettings/filter/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="vanillaexpanded.vplantse">VCE_RawApple</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_HideoutSackApple"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_HideoutSackApple"]/modExtensions/li/randomItems</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="vanillaexpanded.vplantse">VCE_RawApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="vanillaexpanded.vplantse">VCE_RawApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="vanillaexpanded.vplantse">VCE_RawApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_CookingApple</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_HideOutBuildingBase_Cart_Textiles"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_HideOutBuildingBase_Cart_Textiles"]/modExtensions/li/randomItems</xpath>
			<success>Always</success>
			<value>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li>Leather_Plain</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Jeub</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Jeub</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Jeub</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Gibbon</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Gibbon</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Gibbon</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Frog</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Frog</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Frog</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Puffle</li>
				<li MayRequire="TSP.Isengriff.Storytime">Gnome_Cloth</li>
				<li MayRequire="TSP.Isengriff.Storytime">Gnome_Cloth</li>
				<li MayRequire="TSP.Isengriff.Storytime">Gnome_Cloth</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Cartographer</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Beet</li>
				<li MayRequire="TSP.Isengriff.Storytime">Leather_Goblin</li>
				<li MayRequire="TSP.Isengriff.Storytime">VAEAP_Leather_Car</li>
				<li MayRequire="TSP.Isengriff.Storytime">VAEAP_Leather_Car</li>
				<li MayRequire="TSP.Isengriff.Storytime">WoolMeffalo</li>
				<li MayRequire="TSP.Isengriff.Storytime">WoolMeffalo</li>
				<li MayRequire="TSP.Isengriff.Storytime">WoolMeffalo</li>
				<!-- <li MayRequire="TSP.Isengriff.Storytime">Leather_Darkfur</li> -->
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]/fixedIngredientFilter/thingDefs</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinenBulk"]/fixedIngredientFilter/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawFlax</li>
				<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]/fixedIngredientFilter</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]</xpath>
			<success>Always</success>
			<value>
				<fixedIngredientFilter></fixedIngredientFilter>
			</value>
		</nomatch>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]/fixedIngredientFilter/thingDefs</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]/fixedIngredientFilter</xpath>
			<success>Always</success>
			<value>
				<thingDefs></thingDefs>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]/fixedIngredientFilter/thingDefs</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/RecipeDef[defName="DankPyon_MakeLinen"]/fixedIngredientFilter/thingDefs</xpath>
			<success>Always</success>
			<value>
				<li MayRequire="dankpyon.medieval.overhaul">DankPyon_RawFlax</li>
				<li MayRequire="TSP.Isengriff.Storytime">ToadflaxLeaves</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_HideoutTableMarket_Herb"]</xpath>
		<!-- If it does, add this. -->
		<match Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="DankPyon_HideoutTableMarket_Herb"]/modExtensions/li/randomItems</xpath>
			<success>Always</success>
			<value>
				<li>MedicineHerbal</li>
				<li>MedicineHerbal</li>
				<li>MedicineHerbal</li>
				<li>MedicineHerbal</li>
				<li>MedicineHerbal</li>
				<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">TorstolLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
				<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">TorstolLeaves</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
				<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
				<li MayRequire="nottingham.barbecue">NK_RawSpice</li>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingCategoryDef[defName="DankPyon_Flour"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBread"]/ingredients/li/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBread"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBreadBulk"]/ingredients/li/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBreadBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBreadMegaBulk"]/ingredients/li/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_BakeBreadMegaBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinFritters"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinFritters"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinFrittersBulk"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinFrittersBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePie"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePie"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePieBulk"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePieBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePieBulkier"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealApplePieBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCake"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCake"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCakeBulk"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCakeBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCakeBulkier"]/ingredients/li[1]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealLemonCakeBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuiche"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuiche"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuicheBulk"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuicheBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuicheBulkier"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealQuicheBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakes"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakes"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakesBulk"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakesBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakesBulk"]/ingredients/li[4]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealSweetPancakesBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPie"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPie"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulk"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulkier"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulkier"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealPumpkinPieBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCake"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCake"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCakeBulk"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCakeBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCakeBulk"]/ingredients/li[2]/filter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCakeBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealCarrotCakeBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPie"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPie"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPieBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPieBulk"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPieBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<xpath>Defs/RecipeDef[defName="DankPyon_CookMealGriffonBerryPieBulkier"]/fixedIngredientFilter/categories</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="mlie.vanillalikewheat">VLW_CategoryProcessed</li>
						<li MayRequire="Mlie.TakisRandomStuff">Cereal</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
</Patch>