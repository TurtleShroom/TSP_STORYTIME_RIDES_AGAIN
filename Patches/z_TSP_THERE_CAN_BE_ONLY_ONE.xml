<?xml version="1.0" encoding="utf-8" ?>

<Patch>
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PresentIncoming"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef/recipes/li[text()="Make_2Eggnogs"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PresentIncoming"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef/recipes/li[text()="Make_6Eggnogs"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PresentIncoming"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">	
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="Make_2Eggnogs"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PresentIncoming"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="Make_6Eggnogs"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PresentIncoming"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="Eggnog"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<!--
	 These cabbages are pathetic. Send in the real cabbage.
	<Operation Class="PatchOperationConditional">
		DO THE GENTILES KNOW?
		<xpath>Defs/ThingDef[defName="VCE_Cabbage"]</xpath>
		If they do, SHUT IT DOWN.
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="VCE_Cabbage"]</xpath>
		</match>
		If the first XPATH does not exist, the original code stands. All according to plan.
	</Operation>
	-->
	
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="VCE_RawOnion"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
          <success>Always</success>
          <value>
            <li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawCabbage"]</xpath>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/VCE_RawCabbage</xpath>
			<value>
				<ST_Cabbage>12</ST_Cabbage>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="VCE_RawCabbage"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>VCE_RawCabbage</defName>
					<label>VFEP cabbage (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds cabbages to the game, and removes the version of the faggot cabbage from the Vanilla Factions Plants Expanded Mod. If this faggotry is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>Things/Items/PowerCabbage</texPath>
						<graphicClass>Graphic_Single</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
						<cleaningSound Inherit="False">Vomit</cleaningSound>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="PlantWildCabbage"]/plant/harvestedThingDef</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="PlantWildCabbage"]/plant/harvestedThingDef</xpath>
			<value>
				<harvestedThingDef>ST_Cabbage</harvestedThingDef>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="AC_Sauerkraut"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/PipeSystem.ProcessDef[defName="AC_CabbageIntoSauerkraut"]/researchPrerequisites</xpath>
			<value>
				<researchPrerequisites>
					<!-- <li>cabbageCultivation</li> -->
					<li>advancedCooking</li>
					<!-- <li MayRequire="sarg.alphacrafts">AC_ArtisanalFermentation</li> -->
				</researchPrerequisites>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="AC_Sauerkraut"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/PipeSystem.ProcessDef[defName="AC_CabbageIntoSauerkraut"]/ingredients</xpath>
			<value>
				<ingredients>
					<li>
						<thing>ST_Cabbage</thing>
						<countNeeded>50</countNeeded>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/VCE_OrangeTree</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/VCE_OrangeTree</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>

	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="VCE_OrangeTree"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="VCE_OrangeTree"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="VCE_RawOnion"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_RawOrange"]</xpath>
          <success>Always</success>
          <value>
            <li>ST_Orange</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawOrange"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Orange</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawOrange"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Orange</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawOrange"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawOrange"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawOrange"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawOrange"]</xpath>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/VCE_RawOrange</xpath>
			<value>
				<ST_Orange>12</ST_Orange>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="VCE_RawOrange"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>VCE_RawOrange</defName>
					<label>VFEP oranges (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds oranges to the game, and removes the faggot oranges from the Vanilla Factions Plants Expanded Mod. If this is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>Things/Items/Resources/Fruits/Orange</texPath>
						<graphicClass>Graphic_StackCount</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
						<cleaningSound Inherit="False">Vomit</cleaningSound>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildAnimals/BB_Parrot</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildAnimals/BB_Parrot</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="BB_Parrot"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="BB_Parrot"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/PawnKindDef[defName="BB_Parrot"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/PawnKindDef[defName="BB_Parrot"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="EggParrotUnfertilized"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="EggParrotUnfertilized"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="EggParrotFertilized"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="EggParrotFertilized"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="VCE_CoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="VCE_CoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/VCE_CoconutPalm</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/VCE_CoconutPalm</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/RecipeDef[defName="VCE_MilkFromCoconuts"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="VCE_MilkFromCoconuts"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="BiomesIslands_CoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="BiomesIslands_CoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/BiomesIslands_CoconutPalm</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/BiomesIslands_CoconutPalm</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeCoconutPalm</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeCoconutPalm</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="CK_PlantTreeWildCoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CK_PlantTreeWildCoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeWildCoconutPalm</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeWildCoconutPalm</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CK_PlantTreeCoconutPalm"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeCoconutPalm</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/CK_PlantTreeCoconutPalm</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="Make_VGGuacamole"]/ingredients</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="Make_VGGuacamole"]/ingredients</xpath>
			<value>
				<ingredients>
					<li>
						<filter>
							<customSummary>avacadoes</customSummary>
							<thingDefs>
								<li>RawAvocado</li>
							</thingDefs>
						</filter>
						<count>5</count>
					</li>
					<li>
						<filter>
							<customSummary>tomatoes, spices</customSummary>
							<thingDefs>
								<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
								<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
								<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
								<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
								<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
								<li MayRequire="lizzy.milkablehivequeenslurm">Insectoid_Milk</li> <!-- Slurm -->
								<li MayRequire="nottingham.barbecue">NK_RawSpice</li>
								<li MayRequire="herbs.plants">RawMint</li>
								<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
								<li MayRequire="tikubonn.rimseasoning">RimSeasoning_RedPepper</li>
								<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
								<li MayRequire="TSP.BathroomHumor">WasteCanister</li>
								<li MayRequire="oskarpotocki.vfe.medieval2">VFEM2_RafflesiaLeaves</li>
							</thingDefs>
						</filter>
						<count>5</count>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="AC_PrepareKimchi"]/ingredients</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="AC_PrepareKimchi"]/ingredients</xpath>
			<value>
				<ingredients>
					<li>
						<filter>
							<customSummary>cabbage</customSummary>
							<thingDefs>
								<li>ST_Cabbage</li>
							</thingDefs>
						</filter>
						<count>20</count>
					</li>
					<li>
						<filter>
							<customSummmary>spices</customSummmary>
							<thingDefs>
								<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
								<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
								<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
								<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
								<li MayRequire="lizzy.milkablehivequeenslurm">Insectoid_Milk</li> <!-- Slurm -->
								<li MayRequire="nottingham.barbecue">NK_RawSpice</li>
								<li MayRequire="herbs.plants">RawMint</li>
								<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
								<li MayRequire="tikubonn.rimseasoning">RimSeasoning_RedPepper</li>
								<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
								<li MayRequire="oskarpotocki.vfe.medieval2">VFEM2_RafflesiaLeaves</li>
							</thingDefs>
						</filter>
						<count>5</count>
					</li>
				</ingredients>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="AC_PrepareKimchi"]/fixedIngredientFilter</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="AC_PrepareKimchi"]/fixedIngredientFilter</xpath>
			<value>
				<fixedIngredientFilter>
					<thingDefs>
						<li>ST_Cabbage</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
						<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
						<li MayRequire="lizzy.milkablehivequeenslurm">Insectoid_Milk</li> <!-- Slurm -->
						<li MayRequire="nottingham.barbecue">NK_RawSpice</li>
						<li MayRequire="herbs.plants">RawMint</li>
						<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
						<li MayRequire="tikubonn.rimseasoning">RimSeasoning_RedPepper</li>
						<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
						<li MayRequire="oskarpotocki.vfe.medieval2">VFEM2_RafflesiaLeaves</li>
					</thingDefs>
				</fixedIngredientFilter>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="Make_VGGuacamole"]/fixedIngredientFilter</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/RecipeDef[defName="Make_VGGuacamole"]/fixedIngredientFilter</xpath>
			<value>
				<fixedIngredientFilter>
					<thingDefs>
						<li>RawAvocado</li>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
						<li MayRequire="TSP.Isengriff.Storytime">ST_MixedHerbs</li>
						<li MayRequire="TSP.Isengriff.Storytime">GuamLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">HarralanderLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">LantadymeLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">DwarfWeedLeaves</li>
						<li MayRequire="TSP.Isengriff.Storytime">RannarLeaves</li>
						<li MayRequire="vanillaexpanded.vcooke">VCE_RawSpices</li>
						<li MayRequire="lizzy.milkablehivequeenslurm">Insectoid_Milk</li> <!-- Slurm -->
						<li MayRequire="nottingham.barbecue">NK_RawSpice</li>
						<li MayRequire="herbs.plants">RawMint</li>
						<li MayRequire="dajian.chiteaditional.expanded">LaJiao</li>
						<li MayRequire="tikubonn.rimseasoning">RimSeasoning_RedPepper</li>
						<li MayRequire="syrchalis.harpy">RawHarpyChilis</li>
						<li MayRequire="TSP.BathroomHumor">WasteCanister</li>
						<li MayRequire="oskarpotocki.vfe.medieval2">VFEM2_RafflesiaLeaves</li>
					</thingDefs>
				</fixedIngredientFilter>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/RecipeDef[defName="Make_VGGuacamole"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef[@Name="VG_RawFruitBase"]/thingCategories</xpath>
			<value>
				<thingCategories>
					<li>PlantFoodRaw</li>
					<li MayRequire="VanillaExpanded.VPlantsE">VCE_Fruit</li>
				</thingCategories>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingCategoryDef[defName="VCE_Fruit"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingCategoryDef[defName="FruitFoodRaw"]/parent</xpath>
			<value>
				<parent MayRequire="VanillaExpanded.VPlantsE">VCE_Fruit</parent>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[@Name="VG_RawFruitBase"]/thingCategories</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef[@Name="VG_RawFruitBase"]/thingCategories</xpath>
			<value>
				<thingCategories>
					<li>PlantFoodRaw</li>
					<li MayRequire="VanillaExpanded.VPlantsE">VCE_Fruit</li>
				</thingCategories>
			</value>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/PlantTomato</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/PlantTomato</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="PlantTomato"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="PlantTomato"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[@Name="VCE_FruitFoodRawBase"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_RawLemon"]</xpath>
          <success>Always</success>
          <value>
            <li>ST_Lemon</li>
			<li MayRequire="vanillaexpanded.vbrewe">VBE_Gin</li>
			<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawLemon"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
            <li MayRequire="vanillaexpanded.vbrewe">VBE_Gin</li>
			<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawLemon"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
			<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawLemon"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawLemon"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawLemon"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawLemon"]</xpath>
        </li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/VCE_RawLemon</xpath>
			<value>
				<ST_Lemon>2</ST_Lemon>
			</value>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CranberryLongDrink"]/costList/VCE_RawLemon</xpath>
			<value>
				<ST_Lemon>2</ST_Lemon>
			</value>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="FinnishLongDrink"]/costList/VCE_RawLemon</xpath>
			<value>
				<ST_Lemon>1</ST_Lemon>
			</value>
		</li>
		<li Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="FinnishLongDrink"]/thingCategories</xpath>
			<value>
				<li MayRequire="vanillaexpanded.vbrewe">VBE_DrinksLuxurySpirits</li>
			</value>
		</li>
		<li Class="PatchOperationAdd">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="CranberryLongDrink"]/thingCategories</xpath>
			<value>
				<li MayRequire="vanillaexpanded.vbrewe">VBE_DrinksLuxurySpirits</li>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="VCE_RawLemon"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
            <!-- Now we add it back -->
            <ThingDef ParentName="BaseFilth">
              <defName>VCE_RawLemon</defName>
              <label>VFEB Lemon (ERROR)</label>
              <description>The TurtleShroom Storytime Mod removes Vanilla Faction Expanded Brewing Mod's Lemons. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
              <selectable>true</selectable>
              <statBases>
                <MarketValue>0</MarketValue>
                <Beauty>0</Beauty>
                <Cleanliness>1</Cleanliness>
              </statBases>
				<graphicData>
					<texPath>Things/Items/Resources/Fruits/Lemon</texPath>
					<graphicClass>Graphic_StackCount</graphicClass>
				</graphicData>
              <filth>
                <ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
                <disappearsInDays>0.001~0.05</disappearsInDays>
                <rainWashes>true</rainWashes>
                <cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
                <canFilthAttach>false</canFilthAttach>
                <cleaningSound>Vomit</cleaningSound>
              </filth>
            </ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="RawTomatoes"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="RawTomatoes"]</xpath>
          <success>Always</success>
          <value>
			<li>TomatoCyst</li>
			<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="RawTomatoes"]</xpath>
          <success>Always</success>
          <value>
			<li>TomatoCyst</li>
			<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="RawTomatoes"]</xpath>
          <success>Always</success>
          <value>
			<li>TomatoCyst</li>
			<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="RawTomatoes"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="RawTomatoes"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="RawTomatoes"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="RawTomatoes"]</xpath>
        </li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/RawTomatoes</xpath>
			<value>
				<TomatoCyst>2</TomatoCyst>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="RawTomatoes"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
            <!-- Now we add it back -->
            <ThingDef ParentName="BaseFilth">
              <defName>RawTomatoes</defName>
              <label>Ingredient Time Tomatoes (ERROR)</label>
              <description>The TurtleShroom Storytime Mod removes the Oh Ingredient Time Mod's Tomatoes. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
              <selectable>true</selectable>
              <statBases>
                <MarketValue>0</MarketValue>
                <Beauty>0</Beauty>
                <Cleanliness>1</Cleanliness>
              </statBases>
              <graphicData Inherit="False">
                <texPath>Things/Item/PlantFoodRaw/Tomato</texPath>
                <graphicClass>Graphic_Single</graphicClass>
              </graphicData>
              <filth Inherit="False">
                <ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
                <disappearsInDays>0.001~0.05</disappearsInDays>
                <rainWashes>true</rainWashes>
                <cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
                <canFilthAttach>false</canFilthAttach>
                <cleaningSound>Vomit</cleaningSound>
              </filth>
            </ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="VCE_RawPeanut"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
          <success>Always</success>
          <value>
            <li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VCE_RawCoconut"]</xpath>
        </li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/VCE_RawCoconut</xpath>
			<value>
				<Rylex_Coconut>2</Rylex_Coconut>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="VCE_RawCoconut"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>VCE_RawCoconut</defName>
					<label>VFEPMP Coconuts (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds coconuts to the game, and removes the version of the coconut from the VFE More Plants Mod. If this is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>Things/Items/Raw/VCE_Coconuts</texPath>
						<graphicClass>Graphic_Single</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<cleaningSound Inherit="False">Metal_Drop</cleaningSound>
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="CK_Honeycomb"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="CK_Coconuts"]</xpath>
          <success>Always</success>
          <value>
            <li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="CK_Coconuts"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="CK_Coconuts"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="CK_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="CK_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="CK_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="CK_Coconuts"]</xpath>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/CK_Coconuts</xpath>
			<value>
				<Rylex_Coconut>2</Rylex_Coconut>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="CK_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>CK_Coconuts</defName>
					<label>Tropical Rainforest Mod Coconuts (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds coconuts to the game, and removes the version of the coconut from the Tropickapp Rainforest Mod. If this is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>Things/Item/Resource/PlantFoodRaw/Coconuts</texPath>
						<graphicClass>Graphic_Single</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<cleaningSound Inherit="False">Metal_Drop</cleaningSound>
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="BMT_FishMeatCore"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
          <success>Always</success>
          <value>
            <li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
          <success>Always</success>
          <value>
			<li>Rylex_Coconut</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="BiomesIslands_Coconuts"]</xpath>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/BiomesIslands_Coconuts</xpath>
			<value>
				<Rylex_Coconut>2</Rylex_Coconut>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="BiomesIslands_Coconuts"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>BiomesIslands_Coconuts</defName>
					<label>Biomes Islands Mod Coconuts (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds coconuts to the game, and removes the version of the coconut from the Biomes Islands Mod. If this is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>BiomesCore_Things/Items/Crops/Coconut</texPath>
						<graphicClass>Graphic_Single</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<cleaningSound Inherit="False">Metal_Drop</cleaningSound>
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_Coconut"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_Coconut"]/key</xpath>
			<value>
				<key>Rylex_Fruit_Coconut</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_RawOrange"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_RawOrange"]/key</xpath>
			<value>
				<key>ST_Orange</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_RawLemon"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef/comps/li/overrides/li[key="VCE_RawLemon"]/key</xpath>
			<value>
				<key>ST_Lemon</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/RecipeDef[defName="AC_ZestCitrics"]/modExtensions/li/baseline</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/RecipeDef[defName="AC_ZestCitrics"]/modExtensions/li/baseline</xpath>
			<value>
				<baseline>ST_Orange</baseline>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/AlphaCrafts.YogurtOffsets[defName="AC_YogurtFruitOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawOrange"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/AlphaCrafts.YogurtOffsets[defName="AC_YogurtFruitOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawOrange"]/key</xpath>
			<value>
				<key>ST_Orange</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/AlphaCrafts.YogurtOffsets[defName="AC_YogurtFruitOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawLemon"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/AlphaCrafts.YogurtOffsets[defName="AC_YogurtFruitOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawLemon"]/key</xpath>
			<value>
				<key>ST_Lemon</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/AlphaCrafts.ZestOffsets[defName="AC_ZestOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawOrange"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/AlphaCrafts.ZestOffsets[defName="AC_ZestOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawOrange"]/key</xpath>
			<value>
				<key>ST_Orange</key>
			</value>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/AlphaCrafts.ZestOffsets[defName="AC_ZestOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawLemon"]</xpath>
		<match Class="PatchOperationReplace">
			<xpath>Defs/AlphaCrafts.ZestOffsets[defName="AC_ZestOffsets_Plants"]/ingredientsAndOffsetList/li[key="VCE_RawLemon"]/key</xpath>
			<value>
				<key>ST_Lemon</key>
			</value>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional" MayRequire="rh2.randy.burger.fast.food">
		<xpath MayRequire="rh2.randy.burger.fast.food">/Defs/ThingDef[defName="RH2Beer_MuffBeer"]</xpath>
		<nomatch Class="PatchOperationAdd" MayRequire="rh2.randy.burger.fast.food">
			<xpath MayRequire="rh2.randy.burger.fast.food">/Defs</xpath>
			<success MayRequire="rh2.randy.burger.fast.food">Always</success>
			<value MayRequire="rh2.randy.burger.fast.food">
				<ThingDef ParentName="BaseFilth" MayRequire="rh2.randy.burger.fast.food">
					<defName>RH2Beer_MuffBeer</defName>
					<label>RH2 Muff Beer (ERROR)</label>
					<thingClass>ThingWithComps</thingClass>
					<category>Filth</category>
					<description>An error in the RH2 Fast Food Mod has caused the Muff Beer to throw errors. Until that is fixed, this stand in will solve issues with compatibility. If this is ever encountered in the game as an item, you are seeing an error, but DO NOT report it to TurtleShroom. Report it to the RH2 Mod's author, Chickenplucker.</description>
					<graphicData MayRequire="rh2.randy.burger.fast.food">
						<texPath>Things/Drug/MuffBeer</texPath>
						<graphicClass>Graphic_StackCount</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases MayRequire="rh2.randy.burger.fast.food">
						<Flammability>0</Flammability>
						<Nutrition>0.0001</Nutrition>
					</statBases>
					<ingestible>
						<preferability>NeverForNutrition</preferability>
						<foodType>DendrovoreAnimal</foodType>
					</ingestible>
					<filth Inherit="False" MayRequire="rh2.randy.burger.fast.food">
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.01~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
						<cleaningSound Inherit="False">Vomit</cleaningSound>
					</filth>
					<comps>
						<li Class="CompProperties_Drug">
							<chemical>Alcohol</chemical>
							<addictiveness>0.5</addictiveness>
							<minToleranceToAddict>0.02</minToleranceToAddict>
							<existingAddictionSeverityOffset>1</existingAddictionSeverityOffset>
							<needLevelOffset>1</needLevelOffset>
							<listOrder>10</listOrder>
							<overdoseSeverityOffset>0</overdoseSeverityOffset>
							<largeOverdoseChance>0</largeOverdoseChance>
						</li>
						<li Class="CompProperties_Forbiddable"></li>
					</comps>
				</ThingDef>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/DankPyon_Tree_Lemon</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/DankPyon_Tree_Lemon</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/BiomeDef/wildPlants/DankPyon_Plant_Cabbages</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/BiomeDef/wildPlants/DankPyon_Plant_Cabbages</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Plant_Cabbages"]/plant/harvestedThingDef</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_Plant_Cabbages"]/plant/harvestedThingDef</xpath>
			<success>Always</success>
			<value>
				<harvestedThingDef>ST_Cabbage</harvestedThingDef>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Tree_Lemon"]/plant/harvestedThingDef</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_Tree_Lemon"]/plant/harvestedThingDef</xpath>
			<success>Always</success>
			<value>
				<harvestedThingDef>ST_Lemon</harvestedThingDef>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Plant_Cabbages"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="DankPyon_Plant_Cabbages"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- DO THE GENTILES KNOW? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Tree_Lemon"]</xpath>
		<!-- If they do, SHUT IT DOWN. -->
		<match Class="PatchOperationRemove">
			<success>Always</success>
			<xpath>Defs/ThingDef[defName="DankPyon_Tree_Lemon"]</xpath>
		</match>
		<!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="TallGrass"]</xpath>
		<!-- If it does, insert this in the same bracket as the XPATH. -->
		<match Class="PatchOperationInsert">
			<xpath>Defs/ThingDef/plant/sowTags/li[text()="DankPyon_VinePost"]</xpath>
			<success>Always</success>
			<value>
				<li>Ground</li>
				<li>Hydroponic</li>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="DankPyon_RawMulberry"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
          <success>Always</success>
          <value>
            <li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Cabbage</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawCabbages"]</xpath>
		</li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/DankPyon_RawCabbages</xpath>
			<value>
				<ST_Cabbage>12</ST_Cabbage>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="DankPyon_RawCabbages"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
				<ThingDef ParentName="BaseFilth">
					<defName>DankPyon_RawCabbages</defName>
					<label>Medieval Overhaul cabbage (ERROR)</label>
					<category>Filth</category>
					<description>The Storytime Rides Again Mod adds cabbages to the game, and removes the version of the cabbage from the Medieval Overhaul Mod. If this faggotry is ever encountered in the game as an item, you are seeing an error. Please report it to TurtleShroom.</description>
					<graphicData>
						<texPath>Things/Item/Resource/PlantFoodRaw/RawCabbage</texPath>
						<graphicClass>Graphic_Single</graphicClass>
					</graphicData>
					<altitudeLayer>Filth</altitudeLayer>
					<selectable>true</selectable>
					<statBases>
						<Flammability>0</Flammability>
					</statBases>
					<filth Inherit="False">
						<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
						<disappearsInDays>0.001~0.05</disappearsInDays>
						<rainWashes>true</rainWashes>
						<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
						<canFilthAttach>false</canFilthAttach>
						<cleaningSound Inherit="False">Vomit</cleaningSound>
					</filth>
				</ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>Defs/ThingDef[defName="DankPyon_RawMulberry"]</xpath>
    <!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
    <match Class="PatchOperationSequence">
      <!-- <success>Always</success> -->
      <operations>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
            <li>ST_Lemon</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
            <li MayRequire="vanillaexpanded.vbrewe">VBE_Gin</li>
			<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
          </value>
        </li>
        <li Class="PatchOperationInsert">
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
          <success>Always</success>
          <value>
			<li>ST_Lemon</li>
			<li MayRequire="fizzy.drinkies.stellunia">FD_JellySyrup</li>
          </value>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
        </li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawLemons"]</xpath>
        </li>
		<li Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>Defs/ThingDef/costList/DankPyon_RawLemons</xpath>
			<value>
				<ST_Lemon>5</ST_Lemon>
			</value>
		</li>
        <li Class="PatchOperationRemove">
          <success>Always</success>
          <xpath>Defs/ThingDef[defName="DankPyon_RawLemons"]</xpath>
        </li>
        <li Class="PatchOperationAdd">
          <success>Always</success>
          <xpath>/Defs</xpath>
          <value>
            <!-- Now we add it back -->
            <ThingDef ParentName="BaseFilth">
              <defName>DankPyon_RawLemons</defName>
              <label>Medieval Overhaul Lemon (ERROR)</label>
              <description>The TurtleShroom Storytime Mod removes the Medieval Overhaul Mod's lemons. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
              <selectable>true</selectable>
              <statBases>
                <MarketValue>0</MarketValue>
                <Beauty>0</Beauty>
                <Cleanliness>1</Cleanliness>
              </statBases>
				<graphicData>
					<texPath>Things/Items/Resources/Fruits/Lemon</texPath>
					<graphicClass>Graphic_StackCount</graphicClass>
				</graphicData>
              <filth>
                <ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
                <disappearsInDays>0.001~0.05</disappearsInDays>
                <rainWashes>true</rainWashes>
                <cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
                <canFilthAttach>false</canFilthAttach>
                <cleaningSound>Vomit</cleaningSound>
              </filth>
            </ThingDef>
          </value>
        </li>
      </operations>
    </match>
  </Operation>
  
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
	<xpath>Defs/ThingDef[defName="O_RawTomatoes"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
				</li>
				
				<li Class="PatchOperationRemove">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
				</li>
				
				<li Class="PatchOperationRemove">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="O_RawTomatoes"]</xpath>
					<success>Always</success>
				</li>
				
				<li Class="PatchOperationReplace">
					<xpath>Defs/RecipeDef/products/O_RawTomatoes</xpath>
					<success>Always</success>
					<value>
						<TomatoCyst>25</TomatoCyst>
						<VCE_RawTomatoes MayRequire="vanillaexpanded.vplantse">25</VCE_RawTomatoes>
					</value>
				</li>
				
				<li Class="PatchOperationReplace">
					<xpath>Defs/ThingDef/costList/O_RawTomatoes</xpath>
					<success>Always</success>
					<value>
						<TomatoCyst>5</TomatoCyst>
					</value>
				</li>

				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="O_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="O_TomatoPlant"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/BiomeDef/wildPlants/O_TomatoPlant</xpath>
				</li>
				
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
						<defName>O_RawTomatoes</defName>
							<label>tomat-ohs (ERROR)</label>
							<description>TurtleShroom's version of the Storytime Mod removes the Oh Ingredients Mod's duplicate Tomato. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData Inherit="False">
								<texPath>Things/Item/PlantFoodRaw/Tomato</texPath>
								<graphicClass>Graphic_Single</graphicClass>
								<color>(132,80,52)</color>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
				
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
						<defName>O_TomatoPlant</defName>
							<label>tomat-ohs (ERROR)</label>
							<description>TurtleShroom's version of the Storytime Mod removes the Oh Ingredients Mod's duplicate Tomato. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData Inherit="False">
								<texPath>Things/Item/PlantFoodRaw/Tomato</texPath>
								<graphicClass>Graphic_Single</graphicClass>
								<color>(132,80,52)</color>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
  
  
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_RawMulberry"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">TomatoCyst</li>
						<li MayRequire="vanillaexpanded.vplantse">VCE_RawTomatoes</li>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="DankPyon_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef/costList/DankPyon_RawTomatoes</xpath>
					<value>
						<TomatoCyst>5</TomatoCyst>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="DankPyon_RawTomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="DankPyon_Plant_Tomatoes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/BiomeDef/wildPlants/DankPyon_Plant_Tomatoes</xpath>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>DankPyon_RawTomatoes</defName>
							<label>Medieval Overhaul Tomato (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Medieval Overhaul Mod's tomatoes. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Item/Resource/PlantFoodRaw/RawTomatoes</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>DankPyon_Plant_Tomatoes</defName>
							<label>Medieval Overhaul Tomato Plant (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Medieval Overhaul Mod's tomatoes. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Plants/FullGrown/TomatoPlant</texPath>
								<graphicClass>Graphic_Random</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="DankPyon_Post"]/building/defaultPlantToGrow</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<xpath>Defs/ThingDef[defName="DankPyon_Post"]/building/defaultPlantToGrow</xpath>
			<success>Always</success>
			<value>
				<defaultPlantToGrow>Plant_MysteriousFruit</defaultPlantToGrow>
			</value>
		</match>
		<!--If the first XPATH does not exist, the original code stands. -->
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="VV_MapleSyrup"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
					<success>Always</success>
					<value>
						<li MayRequire="TSP.Isengriff.Storytime">ST_Lime</li>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VV_Limes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="VV_Limes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="VV_Limes"]</xpath>
				</li>
				
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef/costList/VV_Limes</xpath>
					<value>
						<ST_Lime MayRequire="TSP.Isengriff.Storytime">5</ST_Lime>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="VV_Limes"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="VV_LimeTree"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/BiomeDef/wildPlants/VV_LimeTree</xpath>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>VV_Limes</defName>
							<label>Vvenchov Limes (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Vvenchov Tree Mod's limes. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Items/Raw/VV_Limes</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>VV_LimeTree</defName>
							<label>Vvenchov Lime Plant (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Vvenchov Tree Mod's limes. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Plants/Trees/VV_LimeTree</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="LGC_BigCabbage"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_Cabbage</li>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawCabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef/costList/LGC_RawCabbage</xpath>
					<value>
						<ST_Cabbage>10</ST_Cabbage>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_RawCabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_Plant_Cabbage"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/BiomeDef/wildPlants/LGC_Plant_Cabbage</xpath>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>LGC_RawCabbage</defName>
							<label>Giant Crop Cabbages (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Giant Crop Mod's pineapples. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Item/Resource/PlantFoodRaw/LGC_RawCabbage</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>LGC_Plant_Cabbage</defName>
							<label>Giant Cabbage Plant (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Giant Crop Mod's pineapples. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Plant/LGC_Plant_Cabbage</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="ST_CabbagePlant"]/comps</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="ST_CabbagePlant"]</xpath>
			<success>Always</success>
			<value>
				<comps></comps>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="ST_Cabbage"]</xpath>
		<!-- If it does, LET'S FASTING GOOOO!!! -->
		<match Class="PatchOperationSequence">
			<operations>
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_BigCabbage"]/costList</xpath>
					<value>
						<costList>
							<ST_Cabbage>500</ST_Cabbage>
						</costList>
					</value>
				</li>
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_BigCabbage"]/killedLeavings</xpath>
					<value>
						<killedLeavings>
							<ST_Cabbage>400</ST_Cabbage>
						</killedLeavings>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="ST_CabbagePlant"]/comps</xpath>
					<value>
						<li Class="LingGiantCrop.CompProperties_GiantCrop" MayRequire="lingluo.giantcrop">
							<size>(3,3)</size>
							<BigPlaht>LGC_BigCabbage</BigPlaht>
						</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="LGC_BigCabbage"]</xpath>
		<!-- If it does, LET'S FASTING GOOOOOOOOOO!!! -->
		<match Class="PatchOperationSequence">
			<!-- <success>Always</success> -->
			<operations>
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/ingredients/li/filter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationInsert">
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
					<success>Always</success>
					<value>
						<li>ST_CookingApple</li>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="LGC_RawApple"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/ingredients/li/filter/li/thingDefs/li[text()="LGC_RawApple"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/fixedIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/RecipeDef/defaultIngredientFilter/thingDefs/li[text()="LGC_RawApple"]</xpath>
				</li>
				
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef/costList/LGC_RawApple</xpath>
					<value>
						<ST_CookingApple>5</ST_CookingApple>
					</value>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_RawApple"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_Plant_Apple"]</xpath>
				</li>
				
				<li Class="PatchOperationRemove">
					<success>Always</success>
					<xpath>Defs/BiomeDef/wildPlants/LGC_Plant_Apple</xpath>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>LGC_RawApple</defName>
							<label>Giant Crop Apples (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Giant Crop Mod's apples. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Item/Resource/PlantFoodRaw/LGC_RawApple</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>/Defs</xpath>
					<value>
						<!-- Now we add it back -->
						<ThingDef ParentName="BaseFilth">
							<defName>LGC_Plant_Apple</defName>
							<label>Giant Apple Plant (ERROR)</label>
							<description>The TurtleShroom Storytime Mod removes the Giant Crop Mod's apples. If you are seeing this, you are witnessing an error. Please report it to TurtleShroom.</description>
							<selectable>true</selectable>
							<statBases>
								<MarketValue>0</MarketValue>
								<Beauty>0</Beauty>
								<Cleanliness>1</Cleanliness>
							</statBases>
							<graphicData>
								<texPath>Things/Plant/LGC_Plant_Apple</texPath>
								<graphicClass>Graphic_Single</graphicClass>
							</graphicData>
							<filth>
								<ignoreFilthMultiplierStat>true</ignoreFilthMultiplierStat>
								<disappearsInDays>0.001~0.05</disappearsInDays>
								<rainWashes>true</rainWashes>
								<cleaningWorkToReduceThickness>1</cleaningWorkToReduceThickness>
								<canFilthAttach>false</canFilthAttach>
								<cleaningSound>Vomit</cleaningSound>
							</filth>
						</ThingDef>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
	
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>Defs/ThingDef[defName="ST_CookingAppleTree"]/comps</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[defName="ST_CookingAppleTree"]</xpath>
			<success>Always</success>
			<value>
				<comps></comps>
			</value>
		</nomatch>
	</Operation>
	
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>Defs/ThingDef[defName="LGC_BigCabbage"]</xpath>
		<!-- If it does, LET'S FASTING GOOOO!!! -->
		<match Class="PatchOperationSequence">
			<operations>
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_BigApple"]/costList</xpath>
					<value>
						<costList>
							<ST_CookingApple>396</ST_CookingApple>
						</costList>
					</value>
				</li>
				<li Class="PatchOperationReplace">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="LGC_BigApple"]/killedLeavings</xpath>
					<value>
						<killedLeavings>
							<ST_CookingApple>198</ST_CookingApple>
						</killedLeavings>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<success>Always</success>
					<xpath>Defs/ThingDef[defName="ST_CookingAppleTree"]/comps</xpath>
					<value>
						<li Class="LingGiantCrop.CompProperties_GiantCrop" MayRequire="lingluo.giantcrop">
							<size>(3,3)</size>
							<BigPlaht>LGC_BigApple</BigPlaht>
						</li>
					</value>
				</li>
			</operations>
		</match>
	</Operation>
</Patch>