<?xml version="1.0" encoding="utf-8" ?>
<Defs>
 
<!--Blueberry-->

	<HediffDef>
		<defName>ST_Bean_Blueberry</defName>
		<label>Roulette Beans: Blueberry</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a blueberry flavor jelly bean! It's pretty tasty. \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; None.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(75,75,200)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>30000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
			</li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_Blueberry</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Blueberry</hediff>
		<stages>
		  <li>
			<label>Won the Bean Roulette: Blueberry</label>
			<description>Yum!</description>
			<baseMoodEffect>1</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>

	<!--Dirt-->  

	<HediffDef>
		<defName>ST_Bean_Dirt</defName>
		<label>Roulette Beans: Stinkbomb</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a stinkbomb disguised as a bean! While trying to injest it, it exploded and covered {PAWN_objective} in filth. \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; Causes the Pawn to drop more Filth than usual.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(150,100,50)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>30000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
				<statOffsets>
					<FilthRate>1.5</FilthRate>
				</statOffsets>	
			</li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_Dirt</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Dirt</hediff>
		<stages>
		  <li>
			<label>Lost the Bean Roulette: Stinkbomb</label>
			<description>Yuck!</description>
			<baseMoodEffect>-3</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>  
  
<!--Earwax-->  
  
	<HediffDef>
		<defName>ST_Bean_Earwax</defName>
		<label>Roulette Beans: Earwax</label>
		<description>That wasn't a bean! It was some Xeno-Human's earwax! Whatever the guy once was, his tainted earwax has somehow reduced the hearing of {PAWN_NameDef}. \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; WHAT? WHAT'S THAT?! SPEAK UP!!</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(200,190,0)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>true</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>45000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
				<capMods>
				  <li>
					<capacity>Hearing</capacity>
					<setMax>0.2</setMax>
				  </li>
				</capMods>
			</li>
		</stages>
	</HediffDef>  
  
    <ThoughtDef>
		<defName>ST_BeanThought_Earwax</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Earwax</hediff>
		<stages>
		  <li>
			<label>Lost the Bean Roulette: Earwax</label>
			<description>AAAAGH. EWW! EWW! PATOOIE! THAT WASN'T A JELLY BEAN!</description>
			<baseMoodEffect>-5</baseMoodEffect>
		  </li>
		</stages>	
  </ThoughtDef>    
  
<!--Soap-->

	<HediffDef>
		<defName>ST_Bean_Soap</defName>
		<label>Roulette Beans: Stealth Soap</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled... soap! Got'cha!  \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; Prevents the Pawn from producing filth for the duration.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(236,228,208)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>120000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			  <li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
				<statOffsets>
					<!-- Isengriff doesn't understand MAYREQUIRE, this requires the Dubs Bad Hygiene Mod -->
					<HygieneRateMultiplier MayRequire="dubwise.dubsbadhygiene">-1</HygieneRateMultiplier>
					<FilthRate>-999</FilthRate>
				</statOffsets>		
			  </li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_Soap</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Soap</hediff>
		<stages>
		  <li>
			<label>Neutral Bean Roulette Outcome: Soap</label>
			<description>Ugh, disgusting! That was soap! At least I feel clean...</description>
			<baseMoodEffect>-2</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>
  
	<!--Tutti-frutti-->  

	<HediffDef>
		<defName>ST_Bean_TuttiFrutti</defName>
		<label>Roulette Beans: Tutti-Frutti</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a Tutti-Frutti flavored jelly bean! Delightful! \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; None.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(255, 160, 160)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>60000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
			</li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_TuttiFrutti</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_TuttiFrutti</hediff>
		<stages>
		  <li>
			<label>Won the Bean Roulette: Tutti-Frutti</label>
			<description>A whop bop bo boom bam, a whop bam boo! Tutti-Frutti, on Louie!</description>
			<baseMoodEffect>15</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>      
  
<!--Sausage-->  

	<HediffDef>
		<defName>ST_Bean_Sausage</defName>
		<label>Roulette Beans: Sausage</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a sausage flavored jelly bean! That's strange flavor, but it's rather filling. \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; Reduces nutrition need for the duration.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(195,138,138)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>45000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
				<hungerRateFactor>0.85</hungerRateFactor>
			</li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_Sausage</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Sausage</hediff>
		<stages>
		  <li>
			<label>Won the Bean Roulette: Sausage</label>
			<description>I honestly didn't expect a sausage flavored jelly bean to taste that good!</description>
			<baseMoodEffect>1</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>  
	
  
<!--Marshmallow-->  

	<HediffDef>
		<defName>ST_Bean_Marshmallow</defName>
		<label>Roullete Beans: Marshmallow</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a marshmallow flavored jelly bean! \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; Slightly increases nutrition need for the duration.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(220,220,180)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>45000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>					
				<hungerRateFactor>1.25</hungerRateFactor>
			</li>
		</stages>
	</HediffDef>    
  
    <ThoughtDef>
		<defName>ST_BeanThought_Marshmallow</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Marshmallow</hediff>
		<stages>
		  <li>
			<label>Won the Bean Roulette: Marshmallow</label>
			<description>Ah, those sweet, sweet empty calories.</description>
			<baseMoodEffect>10</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>        
  
<!--Vinegar-->  

	<HediffDef>
		<defName>ST_Bean_Vinegar</defName>
		<label>Roulette Beans: Vinegar</label>
		<description>{PAWN_NameDef} tried {PAWN_possessive} luck and rolled a vinegar flavored jelly bean! Gross. \n\n&lt;color=#F27893&gt;Bean effect:&lt;/color&gt; None.</description>		
		<initialSeverity>1</initialSeverity>
		<defaultLabelColor>(245,245,230)</defaultLabelColor>      	
		<hediffClass>HediffWithComps</hediffClass>
		<isBad>false</isBad>
		<comps>
			<li Class="HediffCompProperties_Disappears">
				<disappearsAfterTicks>40000</disappearsAfterTicks>
				<showRemainingTime>True</showRemainingTime>
			</li>
		</comps>
		<stages>
			<li>
				<label>Common</label>
				<minSeverity>0</minSeverity>
			</li>
		</stages>
	</HediffDef>

    <ThoughtDef>
		<defName>ST_BeanThought_Vinegar</defName>
		<workerClass>ThoughtWorker_Hediff</workerClass>
		<hediff>ST_Bean_Vinegar</hediff>
		<stages>
		  <li>
			<label>Neutral Bean Roulette Outcome: Vinegar</label>
			<description>Yuck!</description>
			<baseMoodEffect>-5</baseMoodEffect>
		  </li>
		</stages>
  </ThoughtDef>    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</Defs>